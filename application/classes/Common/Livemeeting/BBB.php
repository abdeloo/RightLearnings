<?php

defined('SYSPATH') or die('No direct script access.');
use BigBlueButton\BigBlueButton;
use BigBlueButton\Parameters\CreateMeetingParameters;
use BigBlueButton\Parameters\JoinMeetingParameters;
use BigBlueButton\Parameters\EndMeetingParameters;

class Common_Livemeeting_BBB {

    public static function Meeting_Settings() {
        $bigbluebutton_settings = array();
        $bigbluebutton = ORM::factory('Variables', 138);  //bigbluebutton settings        
        $bigbluebutton_settings["Message"] = $bigbluebutton->value;
        $bigbluebutton_settings["Copyright"] = $bigbluebutton->text_ar;
        $bigbluebutton_settings["Logo"] = ORM::factory('Variables', 2)->value . $bigbluebutton->img;
        $bigbluebutton_settings["bannerText"] = $bigbluebutton->text_en;
        return $bigbluebutton_settings;
    }

    public static function Create_Meeting($details) {
        Model_VClassrooms_Accounts::SetBigBlueButtonKeys();  //setEnvVar
        $bbb = new BigBlueButton();
        $settings = Common_Livemeeting_BBB::Meeting_Settings();
        $meetingID = Text::random('nozero', rand(8, 8));
        $attendee_password = Text::random('nozero', rand(8, 8));
        $moderator_password = Text::random('nozero', rand(8, 8));
        $urlLogout = ORM::factory('Variables',2)->value . "NewHome" ;
        $createMeetingParams = new CreateMeetingParameters($meetingID, $details['title']);
        $createMeetingParams->setAttendeePassword($attendee_password);
        $createMeetingParams->setModeratorPassword($moderator_password);
        $createMeetingParams->setDuration($details['duration']);
        $createMeetingParams->setLogoutUrl($urlLogout);

        $createMeetingParams->setWelcomeMessage($settings["Message"]);
        $createMeetingParams->setCopyright($settings["Copyright"]);
        $createMeetingParams->setLogo($settings["Logo"]);
        $createMeetingParams->setbannerText($settings["bannerText"]);
        $createMeetingParams->setbannerColor("#7c4eb9");

        $createMeetingParams->setLockSettingsLockedLayout(true);
        $createMeetingParams->setMeetingLayout('SMART_LAYOUT');
        $createMeetingParams->setAllowModsToEjectCameras(true);
        $createMeetingParams->setAllowModsToUnmuteUsers(true);
        $createMeetingParams->setLockSettingsDisableNote(true);
        $createMeetingParams->setLockSettingsDisablePrivateChat(true);
        $createMeetingParams->setGuestPolicy('ASK_MODERATOR');



        $createMeetingParams->setPresentationUploadExternalUrl('https://rightlearning.net/files/lessons/23/03/8riqvdp2wbqd5gc4yxc1aj.pdf');
        $createMeetingParams->setPresentationUploadExternalDescription('test pdf');
        if ($details['create_recording'] == "True") {
            $createMeetingParams->setRecord(true);
            $createMeetingParams->setAllowStartStopRecording(true);
            $createMeetingParams->setAutoStartRecording(true);
        }
        $response = $bbb->createMeeting($createMeetingParams);   
        $getxml = $response->getRawXml();
        $json_res = json_encode($getxml);
        $obj= json_decode($json_res);

        $results["response"] = $response;
        $results["meetingID"] = $meetingID;
        $results["obj"] = $obj;

        return $results;
    }


    public static function Join_Meeting($meetingID, $name, $password, $type) {

        $results = array();
        Model_VClassrooms_Accounts::SetBigBlueButtonKeys();  //setEnvVar
        $bbb = new BigBlueButton();
        $joinMeetingParams = new JoinMeetingParameters($meetingID, $name, $password);
        $joinMeetingParams->setRedirect(true);
        $joinMeetingParams->setCustomParameter("FullName", $name);
        $url = $bbb->getJoinMeetingURL($joinMeetingParams);
        
        if($type == "teacher"){
            //send presentation
            $method = 'insertDocument';
            $params = 'meetingID=' . $meetingID;
            $securitySalt = getenv('BBB_SECRET');
            $checksum= sha1($method . $params . $securitySalt);
            $presentation_url = "https://rightlearning.net/files/lessons/23/03/8riqvdp2wbqd5gc4yxc1aj.pdf";

            // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, 'https://vc.rightlearning.net/bigbluebutton/api/insertDocument?meetingID=' . $meetingID . '&checksum=' . $checksum);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
            curl_setopt($ch, CURLOPT_POST, 1);
            curl_setopt($ch, CURLOPT_POSTFIELDS, "<modules><module name=\"presentation\"><document current=\"true\" downloadable=\"true\" url=\"https://rightlearning.net/files/lessons/23/03/8riqvdp2wbqd5gc4yxc1aj.pdf\" filename=\"sample.pdf\"/></module></modules>");

            $headers = array();
            $headers[] = 'Content-Type: application/xml';
            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

            $result = curl_exec($ch);
            if (curl_errno($ch)) {
                echo 'Error:' . curl_error($ch);
            }
            curl_close($ch);
        }

        $results["url"] = $url;

        return $results;
    }

    public static function End_Meeting($meetingID, $password) {
        $results = "";
        Model_VClassrooms_Accounts::SetBigBlueButtonKeys();  //setEnvVar
        $bbb = new BigBlueButton();
        $endMeetingParams = new EndMeetingParameters($meetingID, $password);
        $response = $bbb->endMeeting($endMeetingParams);
        $results = $response->getReturnCode();
        return $results;

    }
   

}
